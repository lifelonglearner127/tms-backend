# Generated by Django 2.2.1 on 2019-10-13 22:27

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('hr', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100)),
                ('published_on', models.DateTimeField(blank=True, null=True)),
                ('is_published', models.BooleanField(default=False)),
                ('policy_type', models.CharField(choices=[('S', '壳牌'), ('T', '危化品运输部'), ('O', '油品'), ('A', '全部')], default='S', max_length=1)),
                ('content', models.TextField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-updated',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100)),
                ('question_type', models.PositiveIntegerField(choices=[(0, '判断题'), (1, '单选题'), (2, '多选题')], default=0)),
                ('question', models.TextField()),
                ('point', models.PositiveIntegerField()),
                ('choices', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None)),
                ('answers', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(), size=None)),
                ('is_correct', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('-updated',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SecurityLibrary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('is_all', models.BooleanField(default=False)),
                ('is_published', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('departments', models.ManyToManyField(to='hr.Department')),
            ],
            options={
                'ordering': ('-updated',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('start_time', models.DateTimeField()),
                ('finish_time', models.DateTimeField()),
                ('description', models.TextField(blank=True, null=True)),
                ('appliants', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('questions', models.ManyToManyField(to='security.Question')),
            ],
            options={
                'ordering': ('-updated',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestQuestionResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_correct', models.BooleanField(blank=True, null=True)),
                ('answers', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(), blank=True, null=True, size=None)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='security.Question')),
            ],
        ),
        migrations.CreateModel(
            name='TestResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_point', models.PositiveIntegerField(default=0)),
                ('point', models.PositiveIntegerField(default=0)),
                ('started_on', models.DateTimeField(blank=True, null=True)),
                ('finished_on', models.DateTimeField(blank=True, null=True)),
                ('appliant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('questions', models.ManyToManyField(through='security.TestQuestionResult', to='security.Question')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='security.Test')),
            ],
        ),
        migrations.AddField(
            model_name='testquestionresult',
            name='test_result',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='security.TestResult'),
        ),
        migrations.CreateModel(
            name='SecurityLibraryAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachment', models.FileField(upload_to='')),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='security.SecurityLibrary')),
            ],
        ),
        migrations.CreateModel(
            name='SecurityLearningProgram',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('start_time', models.DateTimeField()),
                ('finish_time', models.DateTimeField()),
                ('place', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('audiences', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-updated',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CompanyPolicyRead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_read', models.BooleanField(default=False)),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='security.CompanyPolicy')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('policy', 'user')},
            },
        ),
    ]
